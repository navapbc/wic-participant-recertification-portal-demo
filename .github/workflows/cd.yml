name: Deploy

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: "The app to deploy"
        required: true
        default: "participant"
        type: choice
        options:
          - participant
          - staff
  # Designate this as a reusable workflow.
  # When used as a reusable workflow, this always deploys to the dev environment.
  # See https://docs.github.com/en/actions/using-workflows/reusing-workflows
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string

env:
  ENV_NAME: 'prod'
  APP_NAME: ${{ inputs.app_name || 'participant' }}
  PROJECT_NAME: 'wic-prp'
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}

# env vars and inputs aren't evaluated here, so we need to use this toJson
concurrency: cd-${{ toJson(env.ENV_NAME) }}-${{ toJson(github.event.inputs.app_name) || 'participant' }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🔨 Build release
        run: make release-build PROJECT_NAME=$PROJECT_NAME APP_NAME=$APP_NAME IMAGE_TAG=$IMAGE_TAG

      - name: 🗝 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # !! Update the role-to-assume with the GitHub actions role ARN
          role-to-assume: arn:aws:iam::636249768232:role/wic-prp-github-actions
          aws-region: us-west-2

      - name: 📩 Publish release
        run: make release-publish PROJECT_NAME=$PROJECT_NAME ENV_NAME=$ENV_NAME APP_NAME=$APP_NAME IMAGE_TAG=$IMAGE_TAG

      - name: 💾 Prepare for release by gathering outputs to pass to aws-actions steps
        id: prepare-release
        run: make release-prepare PROJECT_NAME=$PROJECT_NAME ENV_NAME=$ENV_NAME APP_NAME=$APP_NAME IMAGE_TAG=$IMAGE_TAG

      - name: ⏬ Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ steps.prepare-release.outputs.service_name }} --query taskDefinition > task-definition.json

      - name: ✏️ Fill in the new image ID in the Amazon ECS task definition
        id: render-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./task-definition.json
          container-name: ${{ steps.prepare-release.outputs.container_name }}
          image: ${{ steps.prepare-release.outputs.image }}

      - name: 📬 Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          service: ${{ steps.prepare-release.outputs.service_name }}
          cluster: ${{ steps.prepare-release.outputs.cluster_name }}
          wait-for-service-stability: true
